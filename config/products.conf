# ###########################################################################
# This configuration file provides a common location for parameters
# that affect the way shake modules make their products. The root element
# is "products" and the next level tags correspond to modules
# ###########################################################################
[products]
  # #########################################################################
  # The mapping module makes basic maps.
  # #########################################################################
  [[ mapping ]]
    # #######################################################################
    # The layers section specifies the paths to the data files for the
    # various geographic features. In the paths, the <INSTALL_DIR> and 
    # <DATA_DIR> macros will be replaced with the install path and data
    # path, respectively, of the user's current profile. If you have 
    # multiple profiles but only want to have one set of data files, 
    # an absolute path can be used.
    # #######################################################################
    [[[ layers ]]]
      coasts = <INSTALL_DIR>/data/mapping/ne_10m_coastline.shp
      oceans = <INSTALL_DIR>/data/mapping/ne_10m_ocean.shp
      lakes = <INSTALL_DIR>/data/mapping/ne_10m_lakes.shp
      countries = <INSTALL_DIR>/data/mapping/ne_10m_admin_0_countries.shp
      states = <INSTALL_DIR>/data/mapping/ne_10m_admin_1_states_provinces.shp
      topography = <INSTALL_DIR>/data/mapping/northridge/gmted_global.grd
      cities = <INSTALL_DIR>/data/mapping/cities1000.txt
    # #######################################################################
    # imts allows the user to specify a set of IMTs for which to make maps.
    # The argument is a list of intensity components (currently only 
    # 'Larger' is supported.
    # #######################################################################
    [[[ imts ]]]
      PGA = ['Larger']
      PGV = ['Larger']
      SA(0.3) = ['Larger']
      SA(1.0) = ['Larger']
      SA(3.0) = ['Larger']
  # #########################################################################
  # raster specifies the parameters for the 'raster' module, which makes
  # GIS raster grids. 'layers' specifies a list of IMTs for which to make GIS
  #  raster files.  'components' allows the specification of the intensity 
  # component(s) for which to make grids (currently limited to 'Larger').
  # #########################################################################
  [[ raster ]]
    components = Larger
    layers = MMI,PGA,PGV,SA(0.3),SA(1.0),SA(3.0)
  # #########################################################################
  # contours specifies parameters for the 'contour' module. 'format' 
  # specifies the output format (currently 'geojson' is the only option.
  # IMTS allows the specification of the IMTs for which to make contours.
  # For each IMT, filter size specifies the size (in grid points) of the 
  # smoothing filter used on the grid before contouring. 'intervals' allows
  # the user to specify a fixed list of contours to make. If 'intervals" is
  # not set, the program will try to do something sensible.
  # #########################################################################
  [[contours]]
    format = geojson
    [[[IMTS]]]
        [[[[MMI]]]] 
          filter_size = 10
          intervals = 1,2,3,4,5,6,7,8,9,10
        [[[[PGA]]]]
          filter_size = 10
          #intervals = 0.1,0.3,1.0,3.0,10.0,30.0,100.0,300.0
        [[[[PGV]]]]
          filter_size = 10
          #intervals = 0.01,0.03,0.1,0.3,1.0,3.0,10.0,30.0,100.0
        [[[[SA(0.3)]]]]
          filter_size = 10
          #intervals = 0.1,0.3,1.0,3.0,10.0,30.0,100.0,300.0
        [[[[SA(1.0)]]]]
          filter_size = 10
          #intervals = 0.1,0.3,1.0,3.0,10.0,30.0,100.0,300.0
        [[[[SA(3.0)]]]]
          filter_size = 10
          #intervals = 0.1,0.3,1.0,3.0,10.0,30.0,100.0,300.0
  # #########################################################################
  # into specifies the parameters for the 'info' module, which makes 
  # metadata files. 'formats' specifies the output format (which is
  # currently limited to 'json'. 
  # #########################################################################
  [[info]]
    formats = json,
